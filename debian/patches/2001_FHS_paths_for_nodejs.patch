Description: FHS paths for nodejs
 Add /usr/local/lib/nodejs for user-installed modules.
Forwarded: not-needed
Author: Jérémy Lal <kapouer@melix.org>
Last-Update: 2010-01-01
--- a/wscript
+++ b/wscript
@@ -588,8 +588,8 @@
     bld.install_files('${PREFIX}/share/man/man1/', 'doc/node.1')
 
   bld.install_files('${PREFIX}/bin/', 'bin/*', chmod=0755)
-  bld.install_files('${PREFIX}/lib/node/wafadmin', 'tools/wafadmin/*.py')
-  bld.install_files('${PREFIX}/lib/node/wafadmin/Tools', 'tools/wafadmin/Tools/*.py')
+  bld.install_files('${PREFIX}/share/nodejs/wafadmin', 'tools/wafadmin/*.py')
+  bld.install_files('${PREFIX}/share/nodejs/wafadmin/Tools', 'tools/wafadmin/Tools/*.py')
 
 def shutdown():
   Options.options.debug
--- a/bin/node-waf
+++ b/bin/node-waf
@@ -1,11 +1,12 @@
 #!/usr/bin/env python
 import os, sys
 
-
 join = os.path.join
-bindir = os.path.dirname(os.path.realpath(__file__))
-prefix = join(bindir, "..")
-wafdir = join(prefix, "lib", "node")
+if os.environ.has_key('PREFIX_NODE'):
+	prefix = os.environ['PREFIX_NODE']
+else:
+	prefix = "/usr"
+wafdir = join(prefix, "share", "nodejs")
 
 w = join(wafdir, 'wafadmin')
 t = join(w, 'Tools')
--- a/src/node_config.h.in
+++ b/src/node_config.h.in
@@ -1,7 +1,7 @@
 #ifndef NODE_CONFIG_H
 #define NODE_CONFIG_H
 
-#define NODE_CFLAGS "@CCFLAGS@ @CPPFLAGS@ -I@PREFIX@/include/node"
+#define NODE_CFLAGS "@CCFLAGS@ @CPPFLAGS@ -I@PREFIX@/include/nodejs"
 #define NODE_PREFIX "@PREFIX@"
 
 #endif /* NODE_CONFIG_H */
--- a/src/node.js
+++ b/src/node.js
@@ -146,7 +146,7 @@
   var pathModule = createInternalModule('path', pathFn);
   var path = pathModule.exports;
 
-  var modulePaths = [path.join(process.execPath, "..", "..", "lib", "node")];
+  var modulePaths = ["/usr/local/lib/nodejs", "/usr/lib/nodejs"];
 
   if (process.env["HOME"]) {
     modulePaths.unshift(path.join(process.env["HOME"], ".node_libraries"));
--- a/tools/wafadmin/Tools/node_addon.py
+++ b/tools/wafadmin/Tools/node_addon.py
@@ -28,7 +28,7 @@
   lib = join(prefix, 'lib')
 
   conf.env['LIBPATH_NODE'] = lib
-  conf.env['CPPPATH_NODE'] = join(prefix, 'include', 'node')
+  conf.env['CPPPATH_NODE'] = join(prefix, 'include', 'nodejs')
   conf.env['CPPFLAGS_NODE'] = '-D_GNU_SOURCE'
   conf.env['CPPFLAGS_NODE'] = '-DEV_MULTIPLICITY=0'
 
@@ -57,7 +57,7 @@
     nodePath = None
     if not os.environ.has_key('NODE_PATH'):
         if not os.environ.has_key('HOME'):
-            nodePath = join(get_prefix(), 'lib', 'node')
+            nodePath = join(get_prefix(), 'lib', 'nodejs')
         else:
             nodePath = join(os.environ['HOME'], '.node_libraries')
     else:
@@ -70,4 +70,4 @@
         prefix = os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..', '..', '..'))
     else:
         prefix = os.environ['PREFIX_NODE']
-    return prefix
\ No newline at end of file
+    return prefix
